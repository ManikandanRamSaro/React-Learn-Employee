[{"D:\\Projects\\React\\employee-app\\src\\index.js":"1","D:\\Projects\\React\\employee-app\\src\\App.js":"2","D:\\Projects\\React\\employee-app\\src\\reportWebVitals.js":"3","D:\\Projects\\React\\employee-app\\src\\Components\\Home.js":"4","D:\\Projects\\React\\employee-app\\src\\Components\\Department.js":"5","D:\\Projects\\React\\employee-app\\src\\Components\\Employee.js":"6","D:\\Projects\\React\\employee-app\\src\\Components\\LearningSite.js":"7","D:\\Projects\\React\\employee-app\\src\\Components\\Navigation.js":"8","D:\\Projects\\React\\employee-app\\src\\Components\\ModelAddDepartment.js":"9","D:\\Projects\\React\\employee-app\\src\\Components\\ModelUpdateDepartment.js":"10","D:\\Projects\\React\\employee-app\\src\\Components\\Employee\\EmployeeManage.js":"11","D:\\Projects\\React\\employee-app\\src\\Components\\Employee\\AddEmployeeModel.js":"12","D:\\Projects\\React\\employee-app\\src\\Components\\Employee\\EmployeesListDatatable.js":"13","D:\\Projects\\React\\employee-app\\src\\Components\\ClassEventsViewer\\basicForm.js":"14","D:\\Projects\\React\\employee-app\\src\\Components\\ClassAndObjects\\FirstClass.js":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":1394,"mtime":1608654566888,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":299,"mtime":1607535048435,"results":"20","hashOfConfig":"17"},{"size":5112,"mtime":1608312245990,"results":"21","hashOfConfig":"17"},{"size":304,"mtime":1607535069042,"results":"22","hashOfConfig":"17"},{"size":484,"mtime":1607535083440,"results":"23","hashOfConfig":"17"},{"size":1131,"mtime":1608654610167,"results":"24","hashOfConfig":"17"},{"size":3498,"mtime":1608311007080,"results":"25","hashOfConfig":"17"},{"size":3896,"mtime":1608309274991,"results":"26","hashOfConfig":"17"},{"size":4859,"mtime":1608469665128,"results":"27","hashOfConfig":"17"},{"size":8268,"mtime":1608367623158,"results":"28","hashOfConfig":"17"},{"size":5104,"mtime":1608469306807,"results":"29","hashOfConfig":"17"},{"size":2510,"mtime":1608658052546,"results":"30","hashOfConfig":"17"},{"size":931,"mtime":1608657953516,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"szme56",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Projects\\React\\employee-app\\src\\index.js",[],["68","69"],"D:\\Projects\\React\\employee-app\\src\\App.js",["70","71"],"D:\\Projects\\React\\employee-app\\src\\reportWebVitals.js",[],"D:\\Projects\\React\\employee-app\\src\\Components\\Home.js",[],"D:\\Projects\\React\\employee-app\\src\\Components\\Department.js",[],"D:\\Projects\\React\\employee-app\\src\\Components\\Employee.js",[],"D:\\Projects\\React\\employee-app\\src\\Components\\LearningSite.js",["72","73"],"import React,{Component} from 'react';\r\nexport default class LearningSite extends Component{\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"bg-primary p-5\">\r\n                   <a href=\"https://react-bootstrap.github.io/\" target=\"_blank\" className=\"btn btn-primary\" >React Bootstrap</a>\r\n                   <a href=\"https://reactrouter.com/web/guides/quick-start\" target=\"_blank\" className=\"btn btn-info\" >React Router</a>\r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Projects\\React\\employee-app\\src\\Components\\Navigation.js",[],"D:\\Projects\\React\\employee-app\\src\\Components\\ModelAddDepartment.js",["74"],"import React,{Component} from 'react';\r\nimport {Row,Col,Model,Button,Form,Modal} from 'react-bootstrap';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default class ModelAddDepartment extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={snackbarOpen:false,messageDis:''} // variables declared for Snack bar \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    closeSnackBar =(event)=>{\r\n        this.setState({snackbarOpen:false})\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://localhost:62489/api/Default/addDepart',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:null,\r\n                depname:event.target.depname.value\r\n            })\r\n         })\r\n            .then(res=>res.json())\r\n            .then((result)=>{\r\n                this.setState({snackbarOpen:true,messageDis:'New Department Added'})\r\n                console.log(result) \r\n            },\r\n            (error)=>{\r\n                this.setState({snackbarOpen:true,messageDis:'There was an error please open console'})\r\n                console.log(error)\r\n            \r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <SnackBar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={this.closeSnackBar}\r\n                message={<span id=\"snk-msg-one\">{this.state.messageDis}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.closeSnackBar}>\r\n                        X\r\n                    </IconButton>\r\n                ]}\r\n                />\r\n\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add Departments\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col sm={12} md={8} lg={6}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                            <Form.Group id=\"depname\">\r\n                                <Form.Label>Department Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"depname\" placeholder=\"Department Name\" required/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                            </Form.Group>\r\n                      </Form>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            </div>\r\n             \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}","D:\\Projects\\React\\employee-app\\src\\Components\\ModelUpdateDepartment.js",["75"],"import React,{Component} from 'react';\r\nimport {Row,Col,Model,Button,Form,Modal} from 'react-bootstrap';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nexport default class ModelUpdateDepartment extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={snackbarOpen:false,messageDis:''} // variables declared for Snack bar \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    closeSnackBar =(event)=>{\r\n        this.setState({snackbarOpen:false})\r\n    }\r\n\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        fetch('http://localhost:62489/api/Default/updateDepart',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:event.target.depid.value,\r\n                depname:event.target.depname.value\r\n            })\r\n         })\r\n            .then(res=>res.json())\r\n            .then((result)=>{\r\n                this.setState({snackbarOpen:true,messageDis:'Department updated'})\r\n                console.log(result)\r\n                \r\n            },\r\n            (error)=>{\r\n                this.setState({snackbarOpen:true,messageDis:'There was an error please open console'})\r\n                console.log(error)\r\n            \r\n        })\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <SnackBar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={this.closeSnackBar}\r\n                message={<span id=\"snk-msg-one\">{this.state.messageDis}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.closeSnackBar}>\r\n                        X\r\n                    </IconButton>\r\n                ]}\r\n                />\r\n\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Update Departments\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col sm={12} md={8} lg={6}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                           <Form.Group id=\"depid\">\r\n                                <Form.Label>Department id</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"depid\" placeholder=\"Department id \" disabled defaultValue={this.props.depid} required/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"depname\">\r\n                                <Form.Label>Department Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"depname\" placeholder=\"Department Name\" required defaultValue={this.props.depname}/>\r\n                            </Form.Group>\r\n                            <Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Update</Button>\r\n                            </Form.Group>\r\n                      </Form>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            </div>\r\n             \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}","D:\\Projects\\React\\employee-app\\src\\Components\\Employee\\EmployeeManage.js",["76","77","78"],"import React,{Component} from 'react';\r\nimport {Table,Button} from 'react-bootstrap';\r\nimport {ButtonToolbar} from 'react-bootstrap'; \r\nimport AddEmployeeModel from './AddEmployeeModel';\r\n\r\nimport {NavLink} from 'react-router-dom';\r\nexport default class EmployeeManage extends Component{\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={arrayofObject:[],onModelShow:false,onModelShowUpdate:false};\r\n    }\r\n    componentDidMount()  \r\n    {\r\n        this.loadDynamicData();\r\n    }\r\n    \r\n    loadStaticData(){\r\n          this.setState({ arrayofObject:[{\"id\":\"1\",\"name\":\"Shree\",\"address\":\"\",\"mobileNo\":\"\",\"depid\":\"\",\"role\":\"\",\"dateat\":\"\"},{\"id\":\"2\",\"name\":\"Sai\",\"address\":\"\",\"mobileNo\":\"\",\"depid\":\"\",\"role\":\"\",\"dateat\":\"\"}] })  //static way to load data\r\n    }\r\n\r\n\r\n    loadDynamicData(){\r\n        fetch('http://localhost:62489/api/default/GetEmplpoyeesList')\r\n        .then(response=>response.json())\r\n        .then(output=>{\r\n            this.setState({arrayofObject:output})\r\n        })\r\n    }\r\n\r\n    componentDidUpdate()  // based on change event this will automatically load data\r\n    {\r\n        this.loadDynamicData();   \r\n    }\r\n    deleteDepartment(depid){\r\n        if(window.confirm('Do you want to delete data ?'))\r\n        {\r\n            fetch('http://localhost:62489/api/Default/deleteDepart',{\r\n                method:'POST',\r\n                headers:{\r\n                    'Accept':'application/json',\r\n                    'Content-Type':'application/json'\r\n                },\r\n                body:JSON.stringify({\r\n                    id:depid,\r\n                    depname:null\r\n                })\r\n             })\r\n                .then(res=>res.json())\r\n                .then((result)=>{ \r\n                    console.log(result) \r\n                },\r\n                (error)=>{ \r\n                    console.log(error)\r\n                \r\n            })\r\n        }\r\n       // event.preventDefault();\r\n        \r\n    }\r\n    \r\n    render()\r\n    {\r\n        const {depid,depname}= this.state; // for Update Model popup\r\n\r\n        const {arrayofObject} =this.state; //table binding properties\r\n        const modelClose=()=>{this.setState({onModelShow:false})} // binding properties\r\n        const modelCloseUpdate=()=>{this.setState({onModelShowUpdate:false})} // binding properties for edit operation\r\n        return(\r\n            <div >\r\n                \r\n                <br/>\r\n                <ButtonToolbar> \r\n                    <Button variant=\"primary\" onClick={()=>this.setState({onModelShow:true})} >Add Employee</Button>\r\n                    <AddEmployeeModel show={this.state.onModelShow} onHide={modelClose}/>\r\n                    <NavLink className=\"btn-info sm-2 p-2\" to=\"/Datatable\">Employees List</NavLink>\r\n                </ButtonToolbar> \r\n                \r\n               \r\n                <Table className=\"mt-2\"  striped bordered hover>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>Name</th>         \r\n                                <th>Address</th>         \r\n                                <th>Mobile</th>         \r\n                                <th>Department</th>   \r\n                                <th>Role</th>         \r\n                                <th>Date</th>         \r\n                                <th>Function</th>                                \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody> \r\n                            {arrayofObject.map(emp=>\r\n                                <tr key={emp.id}>\r\n                                    <td>{emp.id}</td>\r\n                                    <td>{emp.name}</td>\r\n                                    <td>{emp.address}</td>\r\n                                    <td>{emp.mobileNo}</td>\r\n                                    <td>{emp.depid}</td>\r\n                                    <td>{emp.role}</td>\r\n                                    <td>{emp.dateat}</td>\r\n                                    <td>\r\n                                    <ButtonToolbar> \r\n                                        <Button variant=\"info\" className=\"sm-2 mr-2\" onClick={()=>this.setState({onModelShowUpdate:true,depid:emp.id,depname:emp.name})} >Update</Button>\r\n                                        \r\n                                        <Button variant=\"danger\" className=\"sm-2  mr-2\"  onClick={()=>this.deleteDepartment_UsingGET(emp.id)}>Delete</Button>\r\n                                     \r\n                                    </ButtonToolbar> \r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n\r\n                        </tbody>\r\n                </Table>\r\n             \r\n            </div>\r\n        );\r\n    }\r\n}","D:\\Projects\\React\\employee-app\\src\\Components\\Employee\\AddEmployeeModel.js",["79","80","81","82"]," \r\nimport React,{Component} from 'react';\r\nimport {Row,Col,Model,Button,Form,Modal} from 'react-bootstrap';\r\nimport SnackBar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker} from '@material-ui/pickers';\r\n\r\nexport default class AddEmployeeModel extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={snackbarOpen:false,messageDis:'',departList:[],doj:new Date()} // variables declared for Snack bar \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        this.setSelectedDate = this.setSelectedDate.bind(this);\r\n    }\r\n\r\n    closeSnackBar =(event)=>{\r\n        this.setState({snackbarOpen:false})\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        fetch('http://localhost:62489/api/default/GetDepartmentsList')\r\n        .then(response=>response.json())\r\n        .then(output=>{\r\n            this.setState({departList:output})\r\n        })\r\n    }\r\n    handleSubmit(event){\r\n        event.preventDefault();\r\n        let depidis=0\r\n        var listof=this.state.departList;\r\n        for(let i=0;i<listof.length;i++)\r\n        {\r\n            if(listof[i].depname===event.target.depid.value)\r\n            {\r\n                depidis=listof[i].id;\r\n            }\r\n        }\r\n         \r\n        fetch('http://localhost:62489/api/Default/addEmployee',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                id:null,\r\n                name:event.target.name.value,\r\n                address:event.target.address.value,\r\n                mobileNo:event.target.mobileNo.value,\r\n                depid:depidis,//event.target.depid.value,\r\n                role:event.target.role.value,\r\n                dateat:event.target.dateat.value\r\n            })\r\n         })\r\n            .then(res=>res.json())\r\n            .then((result)=>{\r\n                this.setState({snackbarOpen:true,messageDis:'New Employee Added'})\r\n                console.log(result) \r\n            },\r\n            (error)=>{\r\n                this.setState({snackbarOpen:true,messageDis:'There was an error please open console'})\r\n                console.log(error)\r\n            \r\n        })\r\n\r\n    }\r\n    setSelectedDate(date)\r\n    {\r\n        this.setState({doj:date});\r\n    };\r\n    handleDateChange = (date) => {\r\n        console.log(date)\r\n        this.setSelectedDate(date);\r\n    };\r\n\r\n\r\n    \r\n    render(){\r\n      \r\n        const {arrayofObject} =this.state; //table binding properties\r\n        return(\r\n            <div className=\"container\">\r\n                <SnackBar\r\n                anchorOrigin={{vertical:'bottom',horizontal:'center'}}\r\n                open={this.state.snackbarOpen}\r\n                autoHideDuration={3000}\r\n                onClose={this.closeSnackBar}\r\n                message={<span id=\"snk-msg-one\">{this.state.messageDis}</span>}\r\n                action={[\r\n                    <IconButton\r\n                        key=\"close\"\r\n                        aria-label=\"Close\"\r\n                        color=\"inherit\"\r\n                        onClick={this.closeSnackBar}>\r\n                        X\r\n                    </IconButton>\r\n                ]}\r\n                />\r\n\r\n            <Modal\r\n            {...this.props}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add Employee\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n            <div className=\"container\">\r\n                <Row>\r\n                    <Col sm={12}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <div className=\"row\">\r\n                            <dic className=\"col-sm-12 col-md-6\">\r\n                            <Form.Group id=\"name\">\r\n                                <Form.Label>Employee Name</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"name\" placeholder=\"Name\" required/>\r\n                            </Form.Group>\r\n                            </dic>\r\n                            <dic className=\"col-sm-12 col-md-6\">\r\n                           \r\n                            <Form.Group id=\"depid\">\r\n                                <Form.Label>Employee Department</Form.Label>\r\n                                <Form.Control as=\"select\"  name=\"depid\">\r\n                                    {this.state.departList.map(dep =>\r\n                                        <option key={dep.id}>{dep.depname}</option>\r\n                                    )}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            </dic>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <dic className=\"col-sm-12 col-md-6\">\r\n                            <Form.Group id=\"mobileNo\">\r\n                                <Form.Label>Employee Mobile</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"mobileNo\" placeholder=\"Mobile No\" required/>\r\n                            </Form.Group>\r\n                            </dic>\r\n                            <dic className=\"col-sm-12 col-md-6\">\r\n                            <Form.Group id=\"address\">\r\n                                <Form.Label>Employee Address</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"address\" placeholder=\"Address\" required/>\r\n                            </Form.Group>\r\n                            </dic>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <dic className=\"col-sm-12 col-md-6\">\r\n                            <Form.Group id=\"role\">\r\n                                <Form.Label>Employee Role</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"role\" placeholder=\"Role\" required/>\r\n                            </Form.Group>\r\n                            </dic>\r\n                            <dic className=\"col-sm-12 col-md-6\">\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                                \r\n                                   \r\n                                    <KeyboardDatePicker\r\n                                    margin=\"normal\"\r\n                                    id=\"date-picker-dialog\"\r\n                                    label=\"Date of Join\"\r\n                                    format=\"dd-MM-yyyy\"\r\n                                    value={this.state.doj}\r\n                                    onChange={this.handleDateChange}\r\n                                    KeyboardButtonProps={{\r\n                                        'aria-label': 'change date',\r\n                                    }}\r\n                                    />  \r\n                                </MuiPickersUtilsProvider>\r\n                            {/* <Form.Group id=\"dateat\">\r\n                                <Form.Label>Date of Join</Form.Label>\r\n                                <Form.Control type=\"date\" name=\"dateat\" placeholder=\"Select Date\" required/>\r\n                            </Form.Group> */}\r\n                            </dic>\r\n                        </div> \r\n                          \r\n                          \r\n                          \r\n                           \r\n                           \r\n                            <Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                            </Form.Group>\r\n                      </Form>\r\n                    </Col>\r\n                </Row>\r\n               \r\n            </div>\r\n             \r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button onClick={this.props.onHide}>Close</Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n          </div>\r\n        )\r\n    }\r\n}","D:\\Projects\\React\\employee-app\\src\\Components\\Employee\\EmployeesListDatatable.js",[],"D:\\Projects\\React\\employee-app\\src\\Components\\ClassEventsViewer\\basicForm.js",["83"],"D:\\Projects\\React\\employee-app\\src\\Components\\ClassAndObjects\\FirstClass.js",["84","85","86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":1,"column":8,"nodeType":"94","messageId":"95","endLine":1,"endColumn":12},{"ruleId":"92","severity":1,"message":"96","line":3,"column":8,"nodeType":"94","messageId":"95","endLine":3,"endColumn":14},{"ruleId":"97","severity":1,"message":"98","line":7,"column":65,"nodeType":"99","endLine":7,"endColumn":80},{"ruleId":"97","severity":1,"message":"98","line":8,"column":77,"nodeType":"99","endLine":8,"endColumn":92},{"ruleId":"92","severity":1,"message":"100","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"100","line":2,"column":17,"nodeType":"94","messageId":"95","endLine":2,"endColumn":22},{"ruleId":"92","severity":1,"message":"101","line":65,"column":16,"nodeType":"94","messageId":"95","endLine":65,"endColumn":21},{"ruleId":"92","severity":1,"message":"102","line":65,"column":22,"nodeType":"94","messageId":"95","endLine":65,"endColumn":29},{"ruleId":"92","severity":1,"message":"103","line":69,"column":15,"nodeType":"94","messageId":"95","endLine":69,"endColumn":31},{"ruleId":"92","severity":1,"message":"100","line":3,"column":17,"nodeType":"94","messageId":"95","endLine":3,"endColumn":22},{"ruleId":"92","severity":1,"message":"104","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":12},{"ruleId":"92","severity":1,"message":"105","line":9,"column":35,"nodeType":"94","messageId":"95","endLine":9,"endColumn":53},{"ruleId":"92","severity":1,"message":"106","line":87,"column":16,"nodeType":"94","messageId":"95","endLine":87,"endColumn":29},{"ruleId":"92","severity":1,"message":"96","line":2,"column":18,"nodeType":"94","messageId":"95","endLine":2,"endColumn":24},{"ruleId":"107","severity":1,"message":"108","line":3,"column":5,"nodeType":"109","messageId":"110","endLine":6,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":10,"column":22,"nodeType":"113","messageId":"114","endLine":10,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":15,"column":22,"nodeType":"113","messageId":"114","endLine":15,"endColumn":39},{"ruleId":"111","severity":1,"message":"112","line":35,"column":22,"nodeType":"113","messageId":"114","endLine":35,"endColumn":39},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'Model' is defined but never used.","'depid' is assigned a value but never used.","'depname' is assigned a value but never used.","'modelCloseUpdate' is assigned a value but never used.","'Grid' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'arrayofObject' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-new-wrappers","Do not use String as a constructor.","NewExpression","noConstructor","no-global-assign","no-unsafe-negation"]